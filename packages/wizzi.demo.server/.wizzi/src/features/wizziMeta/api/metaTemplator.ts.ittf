module
    import path from 'path'
    import wizzi from 'wizzi'
    import
        @ verify
        @ fSystem
        from 'wizzi-utils'
    const file = fSystem.vfile()
    +
    async-function metaTemplator
        param metaGeneratorFileTemplatesIndex
            :string
        param destinationIttfTempFolder
            :string
        param cliCtx
            :any
        r_promise()
            _ wizzi.model
                @ metaGeneratorFileTemplatesIndex
                {
                    @ cliCtx cliCtx
                =>
                    param err
                        :any
                    param packageTemplate
                        :any
                    if err
                        error 'wizziMeta.metaTemplator.wizzi.model', err
                        r_reject()
                            {
                                @ message 'wizziMeta.metaTemplator.wizzi.model'
                                @ err
                    try
                        foreach child in packageTemplate.children
                            if child.name == '$file'
                                _ processFile
                                    @ child
                                    @ destinationIttfTempFolder
                        r_resolve()
                            {
                                @ message 'Package generated'
                    catch ex
                        r_reject()
                            {
                                @ message 'wizziMeta.metaTemplator. Error writing package files'
                                @ ex
    function processFile
        param node
            :any
        param destinationIttfTempFolder
            :string
        log 'wizziMeta.metaTemplator.writing', node.value, 'to', destinationIttfTempFolder
        var outputPath
            _ path.join
                @ destinationIttfTempFolder
                @ node.value
        var sb = []
        foreach child in node.children
            _ processContent
                @ sb
                @ child
                @ 0
        _ file.write
            @ outputPath
            _ sb.join
                @ '\n'
    function processContent
        param sb
            :any
        param node
            :any
        param indent
            :number
        # log new Array(indent).join(' ') + node.name + ' ' + node.value
        _ sb.push
            @ new Array(indent).join(' ') + decode(node.name) + ' ' + decode(node.value)
        foreach child in node.children
            _ processContent
                @ sb
                @ child
                @ indent + 4
    function decode
        param text
            :string
        set text = verify.replaceAll(text, "$", "$")
        return verify.replaceAll(text, "£'('£", "(")
    +
    export
        @ metaTemplator
