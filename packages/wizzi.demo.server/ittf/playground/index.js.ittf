module
	kind es6

	$include js/wz/core
	$include js/wz/node
	$include js/wz/ace
	$include js/wz/localstorage
	$include js/wz/htmlBuilder
	$include js/wz/contextMenu
	$include js/wz/standalone
	$include js/widgets/editorControl
	$include js/widgets/treeNode
	$include js/widgets/treeView
	$include js/widgets/treeFilesystem

	$include js/appManager
	$include js/dataManager
	$include js/treeManager

	let glEventHub = new EventEmitter3()
	set window.glEventHub = glEventHub
	$$ TODO set window.path = wz.utils.path

    async-function prompt
        param text
        if typeof text === 'string'
            return 
                _ Swal
                    { 
                        @ text
                        @ input 'text'
                        @ useRejections true
        else
            if typeof text === 'object'
                if text.input === undefined
                    set text.input = 'text'
                set text.useRejections = true
                return Swal(text)

	$* not used VIA
    function initHandlers
		set currentSchema = store.get('lastSchema')
		_ wz.value('selectedSchema', currentSchema)
		set currentEditContent
			_ store.get
				@ currentSchema + '_content'
				@ currentSchema
				@ true
		_ editor.value
			@ currentEditContent
		_ wizzify
		_ wz.change
			@ 'selectedSchema'
			=>
				log 'onChangeSchema', event.target.value
				set currentSchema = event.target.value
				_ store.set('lastSchema', currentSchema)
				set currentEditContent
					_ store.get
						@ currentSchema + '_content'
						@ currentSchema
						@ true
				_ editor.value
					@ currentEditContent
				_ wizzify
    *$

	var app
		new AppManager
			{
	_ app.start

	