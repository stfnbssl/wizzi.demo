html

    $
        var opt = {
            Build: {
                useJQuery: true,
            }
        }
    html/layouts/empty_opt(&opt)

        - from https://codepen.io/shshaw/pen/kOxGQa

        $append head-styles
            css ./styles.css.ittf

        . Modal-Background toggle-Modal
            . Center-Block Absolute-Center is-Fixed is-Variable Modal
                id Fixed-Modal
                . Center-Content
                    h4 Absolute Center.
                        class Title
                    p This box is absolutely centered within the viewport, horizontally and vertically, using only CSS.
                    p 
                        a Resize Me!
                            href #
                            class Shaw-Button trigger-Resize
                    p 
                        a Close Modal
                            href #
                            class Shaw-Button toggle-Modal
        nav 
            id Navigation
            role navigation
            a Absolute Centering
                href #Overview
            a Comparison Table
                href #Comparison-Table
            a Explanation
                href #Explanation
            a Alignment
                href #Alignment
            a Responsive
                href #Responsive
            a Overflow
                href #Overflow
            a Resizing
                href #Resizing
            a Images
                href #Images
            a Variable Height
                href #Height
            a Other Techniques
                href #Other
            a Recommendations
                href #Recommendations
        article 
            class Content
            header 
                id Overview
                class clearfix
                . Center-Container no-wp
                    id Main-Title
                    h1 Absolute Centering in CSS
                        class Title Center-Block Absolute-Center is-Variable
                . Notification no-wp
                    p Thanks for the positive comments! Now you can read this article on
                        a Smashing Magazine
                            href http://coding.smashingmagazine.com/2013/08/09/absolute-horizontal-vertical-centering-css/
                            target _blank
                        + and experience a few new demos (like
                        a Resizing
                            href #Resizing
                        + ) and code examples (
                        a Variable Height Modernizr Test
                            href #Height
                        + &amp;
                        a Other Techniques
                            href #Other
                        + )! I've also added a
                        a Comparison Table
                            href https://codepen.io/shshaw/full/gEiDt#Comparison-Table
                        + to see which vertical centering technique is right for you.
                p We've all seen
                    code margin: 0 auto;
                    + for horizontal centering, but
                    code margin: auto;
                    + has refused to work for vertical centering...
                    em until now!
                    + But actually (spoiler alert!) absolute centering
                    strong only requires a
                        a declared height*
                            href #Height
                        + and these styles
                    + :
                pre 
                    ++ .Absolute-Center {
                    ++ margin: auto;
                    ++ position: absolute;
                    ++ top: 0; left: 0; bottom: 0; right: 0;
                    ++ }
                p I'm not the pioneer of this method (yet I have dared to name it
                    em Absolute Centering
                    + ), and it may even be a common technique, however, most vertical centering articles never mention it and I had never seen it until I dug through the comments section of a
                    a particular article
                        href https://designshack.net/articles/css/how-to-center-anything-with-css
                        target _blank
                    + .
                p There,
                    a Simon
                        href https://designshack.net/articles/css/how-to-center-anything-with-css/#comment-684580538
                        target _blank
                    + linked to this
                    a jsFiddle
                        href http://jsfiddle.net/mBBJM/1/
                        target _blank
                    + that blew every other method out of the water (the same method was also mentioned by
                    a Priit
                        href https://designshack.net/articles/css/how-to-center-anything-with-css/#comment-684580409
                        target _blank
                    + in the comments). Researching further, I had to use very specific keywords to find
                    a some
                        href http://www.vanseodesign.com/css/vertical-centering/
                    a other
                        href http://www.student.oulu.fi/~laurirai/www/css/middle/
                        target _blank
                    a sources
                        href http://blog.themeforest.net/tutorials/vertical-centering-with-css/
                        target _blank
                    + for this method.
                p Having never used this technique before, I put it to the test and discovered how incredible Absolute Centering really is.
                div 
                    id More-Info
                    p 
                        strong 
                            em Leave a comment on
                                a CodePen
                                    href https://codepen.io/shshaw/details/gEiDt
                                + ,
                                a Smashing Magazine
                                    href http://coding.smashingmagazine.com/2013/08/09/absolute-horizontal-vertical-centering-css/#comments
                                    target _blank
                                + , or message
                                a @shshaw
                                    href https://twitter.com/shshaw
                                    target _blank
                                + on Twitter if you have any additional features or suggestions.
                br 
                . Advantages Float-Left
                    h4 Advantages:
                    ul 
                        li Cross-browser (including IE8-10)
                        li No special markup, minimal styles
                        li Responsive with percentages and min-/max-
                        li Use one class to center any content
                        li Centered regardless of padding (without
                            code box-sizing
                            + !)
                        li Blocks can easily be resized
                        li Works great on images
                . Caveats Float-Right
                    h4 Caveats:
                    ul 
                        li Height must be declared (see
                            a Variable Height
                                href #Height
                            + )
                        li Recommend setting
                            code overflow: auto
                            + to prevent content spillover (see
                            a Overflow
                                href #Overflow
                            + )
                . Clear
                h4 Browser Compatibility:
                p 
                    strong Chrome, Firefox, Safari, Mobile Safari, IE8-10.
                    br 
                    + Absolute Centering was tested and works flawlessly in the latest versions of Chrome, Firefox, Safari, Mobile Safari,
                    a Windows Phone
                        href https://twitter.com/BrairMoss/status/475014563318886401
                    + and even IE8-10.
                    small (Previous versions of the article mentioned issues with Windows Phone, but that may have been a CodePen limitation).
            section 
                id Comparison-Table
                class clearfix
                h3 Comparison Table
                p Absolute Centering isn't the only option out there. Several unique methods exist for vertical centering, and each has their advantages. Which technique you choose mainly boils down to which browsers you support and what your existing markup looks like, but this comparison table can help make the right choice to match the features you need.
                . table-container
                    table 
                        class table
                        thead 
                            tr 
                                th Technique
                                    scope col
                                    class Technique-Title
                                th Browser Support
                                    scope col
                                    class Browser-Support
                                th Responsive
                                    scope col
                                    class Responsive-Support
                                th Overflow
                                    scope col
                                    class Overflow-Support
                                th 
                                    scope col
                                    class Resize-Support
                                    code resize:both
                                th Variable Height
                                    scope col
                                    class Height-Support
                                th Major Caveats
                                    scope col
                                    class Major-Caveats
                        tbody 
                            tr 
                                th 
                                    scope row
                                    class Technique-Title
                                    a Absolute Centering
                                        href #Overview
                                td Modern &amp; IE8+
                                    class Browser-Support
                                td Yes
                                    class Responsive-Support
                                td Scroll, can overflow container
                                    class Overflow-Support
                                td Yes
                                    class Resize-Support
                                td Yes*
                                    class Height-Support
                                td 
                                    class Major-Caveats
                                    a Variable Height
                                        href #Height
                                    + not perfect cross-browser
                            tr 
                                th 
                                    scope row
                                    class Technique-Title
                                    a Negative Margins
                                        href #Negative-Margins
                                td All
                                    class Browser-Support
                                td No
                                    class Responsive-Support
                                td Scroll
                                    class Overflow-Support
                                td Resizes but doesn't stay centered
                                    class Resize-Support
                                td No
                                    class Height-Support
                                td Not responsive, margins must be calculated manually
                                    class Major-Caveats
                            tr 
                                th 
                                    scope row
                                    class Technique-Title
                                    a Transforms
                                        href #Transforms
                                td Modern &amp; IE9+
                                    class Browser-Support
                                td Yes
                                    class Responsive-Support
                                td Scroll, can overflow container
                                    class Overflow-Support
                                td Yes
                                    class Resize-Support
                                td Yes
                                    class Height-Support
                                td Blurry rendering
                                    class Major-Caveats
                            tr 
                                th 
                                    scope row
                                    class Technique-Title
                                    a Table-Cell
                                        href #Table-Cell
                                td Modern &amp; IE8+
                                    class Browser-Support
                                td Yes
                                    class Responsive-Support
                                td Expands container
                                    class Overflow-Support
                                td No
                                    class Resize-Support
                                td Yes
                                    class Height-Support
                                td Extra markup
                                    class Major-Caveats
                            tr 
                                th 
                                    scope row
                                    class Technique-Title
                                    a Inline-Block
                                        href #Inline-Block
                                td Modern, IE8+ &amp; IE7*
                                    class Browser-Support
                                td Yes
                                    class Responsive-Support
                                td Expands container
                                    class Overflow-Support
                                td No
                                    class Resize-Support
                                td Yes
                                    class Height-Support
                                td Requires container, hacky styles
                                    class Major-Caveats
                            tr 
                                th 
                                    scope row
                                    class Technique-Title
                                    a Flexbox
                                        href #Flexbox
                                td Modern &amp; IE10+
                                    class Browser-Support
                                td Yes
                                    class Responsive-Support
                                td Scroll, can overflow container
                                    class Overflow-Support
                                td Yes
                                    class Resize-Support
                                td Yes
                                    class Height-Support
                                td Requires container, vendor prefixes
                                    class Major-Caveats
            section 
                id Explanation
                class clearfix
                h3 Explanation
                p After researching specs and documentation, this is my understanding of how Absolute Centering works:
                ol 
                    li In the
                        a normal content flow
                            href http://taligarsiel.com/Projects/howbrowserswork1.htm#Layout
                            target _blank
                        + ,
                        code margin: auto;
                        ++ equals '0' for the top and bottom.
                        small 
                            class Reference
                            a W3.org
                                href http://www.w3.org/TR/CSS2/visudet.html#normal-block
                            + :
                            q If 'margin-top', or 'margin-bottom' are 'auto', their used value is 0.
                    li 
                        code position: absolute;
                        ++ breaks the block out of the typical content flow, rendering the rest of the content as if that block weren't there.
                        small 
                            class Reference
                            a Developer.mozilla.org
                                href https://developer.mozilla.org/en-US/docs/Web/CSS/position#Absolute_positioning
                                target _blank
                            + :
                            q ...an element that is positioned absolutely is taken out of the flow and thus takes up no space
                    li Setting
                        code top: 0; left: 0; bottom: 0; right: 0;
                        + gives the browser a new bounding box for the block. At this point the block will fill all available space in its offset parent, which is the body or
                        code position: relative;
                        + container.
                        small 
                            class Reference
                            a Developer.mozilla.org
                                href https://developer.mozilla.org/en-US/docs/Web/CSS/position#Notes
                                target _blank
                            + :
                            q For absolutely positioned elements, the top, right, bottom, and left properties specify offsets from the edge of the element's containing block (what the element is positioned relative to).
                    li Giving the block a
                        code width
                        + or a
                        code height
                        + prevents the block from taking up all available space and forces the browser to calculate
                        code margin: auto
                        + based on the new bounding box.
                        small 
                            class Reference
                            a Developer.mozilla.org
                                href https://developer.mozilla.org/en-US/docs/Web/CSS/position#Notes
                                target _blank
                            + :
                            q The margin of the [absolutely positioned] element is then positioned inside these offsets.
                    li Since the block is absolutely positioned and therefore out of the normal flow, the browser gives equal values to
                        code margin-top
                        + and
                        code margin-bottom
                        ++ centering the element in the bounds set earlier.
                        small 
                            class Reference
                            a W3.org
                                href http://www.w3.org/TR/CSS2/visudet.html#abs-non-replaced-height
                            + :
                            q If none of the three [top, bottom, height] are 'auto': If both 'margin-top' and 'margin-bottom' are 'auto', solve the equation under the extra constraint that the two margins get equal values.
                            + AKA: center the block vertically
                p Absolute Centering appears to be the intended use for
                    code margin: auto;
                    + based on the spec and should therefore work in every standards compliant browser.
                p 
                    strong TL;DR:
                    + Absolutely positioned elements aren't rendered in the normal flow, so
                    code margin: auto;
                    + centers vertically within the bounds set by
                    code top: 0; left: 0; bottom: 0; right: 0;
                    + .
            section 
                id Alignment
                class clearfix
                h3 Alignment
                    class no-wp
                . Sub-Section clearfix
                    id In-Container
                    h3 Within Container
                    . Float-Right
                        pre 
                            ++ .Center-Container {
                            ++ position: relative;
                            ++ }
                            ++ .Absolute-Center {
                            ++ width: 50%;
                            ++ height: 50%;
                            ++ overflow: auto;
                            ++ margin: auto;
                            ++ position: absolute;
                            ++ top: 0; left: 0; bottom: 0; right: 0;
                            ++ }
                    p With Absolute Centering, you can place your content block inside of a
                        code position: relative
                        + container to align the block within the container!
                    p 
                        strong The rest of the demos will assume these styles are already included and will provide add-on classes to implement various features.
                    . Center-Container
                        . Center-Block Absolute-Center
                            h4 Absolute Center,
                                class Title
                                br 
                                + Within Container.
                            p This box is absolutely centered, horizontally and vertically, within its container using
                                br 
                                code position: relative
                    . Clear
                . Sub-Section clearfix
                    id Viewport
                    h3 Within Viewport
                    . Float-Right
                        pre 
                            ++ .Absolute-Center.is-Fixed {
                            ++ position: fixed;
                            ++ z-index: 999;
                            ++ }
                    p Want the content block centered in the viewport? Set it to
                        code position: fixed
                        + and give it a high z-index, like the modal on this page.
                    ul 
                        class Caveats
                        li 
                            strong Mobile Safari:
                            + The content block will be centered vertically in the whole document, not the viewport, if it is not within a
                            code position: relative
                            + container.
                    a Show/Hide Modal.
                        class toggle-Modal Shaw-Button
                        href #Fixed-Modal
                    . Clear
                . Sub-Section clearfix
                    id Offsets
                    h3 Offsets
                    . Float-Right
                        pre 
                            ++ .Absolute-Center.is-Right {
                            ++ left: auto; right: 20px;
                            ++ text-align: right;
                            ++ }
                            ++ .Absolute-Center.is-Left {
                            ++ right: auto; left: 20px;
                            ++ text-align: left;
                            ++ }
                    p If you have a fixed header or need to add other offsets, simply add it in your content block's styles like
                        code top: 70px;
                        + . As long as
                        code margin: auto;
                        + is declared, the content block will be vertically centered within the bounds you declare with
                        code top
                        code left
                        code bottom
                        + and
                        code right
                        + .
                    p You can also stick your content block to the right or left while keeping it vertically centered, using
                        code right: 0; left: auto;
                        + to stick to the right or
                        code left: 0; right: auto;
                        + to stick to the left.
                    . Center-Container
                        . Center-Block Absolute-Center is-Right
                            h4 Vertical Center,
                                class Title
                                br 
                                + Align Right.
                            p This box is absolutely centered vertically within its container, but stuck to the right with
                                br 
                                code right: 0; left: auto;
            section 
                id Responsive
                class clearfix
                h3 Responsive
                . Float-Right
                    pre 
                        ++ .Absolute-Center.is-Responsive {
                        ++ width: 60%;
                        ++ height: 60%;
                        ++ min-width: 200px;
                        ++ max-width: 400px;
                        ++ padding: 40px;
                        ++ }
                p Perhaps the best benefit of Absolute Centering is percentage based width/heights work perfectly! Even
                    code min-width/max-width
                    + and
                    code min-height/max-height
                    + styles behave as expected for more responsive boxes.
                p Go ahead, add padding to the element; Absolute Centering doesn't mind!
                . Center-Container
                    . Center-Block Absolute-Center is-Responsive
                        h4 Absolute Center,
                            class Title
                            br 
                            + Percentage Based.
                        p This box is absolutely centered, horizontally and vertically, even with percentage based widths &amp; height, min-/max-, and padding!
        section 
            id Overflow
            class clearfix
            h3 Overflow
            . Float-Right
                pre 
                    ++ .Absolute-Center.is-Overflow {
                    ++ overflow: auto;
                    ++ }
            p Content taller than the block or container (viewport or a
                code position: relative
                + container) will overflow and may spill outside the content block and container or even be cut off. Simply adding
                code overflow: auto
                + will allow the content to scroll within the block as long as the content block itself isn't taller than its container (perhaps by adding
                code max-height: 100%;
                + if you don't have any padding on the content block itself).
            . Center-Container
                . Center-Block Absolute-Center is-Overflow
                    h4 Absolute Center,
                        class Title
                        br 
                        + With Overflow.
                    p This box is absolutely centered within its container, with content set to overflow.
                    p Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent bibendum, lorem vel tincidunt imperdiet, nibh elit laoreet felis, a bibendum nisl tortor non orci. Donec pretium fermentum felis, quis aliquet est rutrum ut. Integer quis massa ut lacus viverra pharetra in eu lacus. Aliquam tempus odio adipiscing diam pellentesque rhoncus.
                    p Curabitur a bibendum est. Mauris vehicula cursus risus id luctus. Curabitur accumsan venenatis nibh, non egestas ipsum vulputate ac. Vivamus consectetur dolor sit amet enim aliquet eu scelerisque ipsum hendrerit. Donec lobortis suscipit vestibulum.
                    p Nullam luctus pellentesque risus in ullamcorper. Nam neque nunc, mattis vitae ornare ut, feugiat a erat. Ut tempus iaculis augue vel pellentesque.
        section 
            id Resizing
            class clearfix
            h3 Resizing
            . Float-Right
                pre 
                    ++ .Absolute-Center.is-Resizable {
                    ++ min-width: 20%;
                    ++ max-width: 80%;
                    ++ min-height: 20%;
                    ++ max-height: 80%;
                    ++ resize: both;
                    ++ overflow: auto;
                    ++ }
            p You can resize your content block with other classes or Javascript without having to recalculate the center manually! Adding the
                code resize
                + property will even let your content block be resized by the user.
            p Absolute Centering keeps the block centered no matter how the block is resized. Setting min-/max- will limit the block's size to what you want and prevent it from overflowing the window/container.
            p If you don't use
                code resize: both
                + , you can add a
                code transition
                + to smoothly animate between sizes. Be sure to set
                code overflow: auto
                + since the block could be resized smaller than the content.
            p Absolute Centering is the only vertical centering technique tested that successfully supports the
                code resize: both
                + property.
            . Caveats
                h4 Caveats:
                ul 
                    li Set your
                        code max-width/max-height
                        + to compensate for any padding on the content block itself, otherwise it will overflow its container.
                    li The
                        code resize
                        + property is not supported on mobile browsers or in IE 8-10 so make sure your users have an alternate way of resizing if that is essential to user experience.
                    li Combining
                        code resize
                        + and
                        code transition
                        + properties causes a delay equal to the transition time when the user attempts to resize.
            . Center-Container
                . Center-Block Absolute-Center is-Resizable
                    id Resize-Block
                    h4 Absolute Center,
                        class Title
                        br 
                        + Resizable.
                    p This box is absolutely centered within its container and can be resized by the user or via Javascript.
                    p 
                        class no-wp
                        a Resize Me!
                            href #
                            class trigger-Resize Shaw-Button
                    p Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent bibendum, lorem vel tincidunt imperdiet, nibh elit laoreet felis, a bibendum nisl tortor non orci. Donec pretium fermentum felis, quis aliquet est rutrum ut. Integer quis massa ut lacus viverra pharetra in eu lacus. Aliquam tempus odio adipiscing diam pellentesque rhoncus.
                    p Curabitur a bibendum est. Mauris vehicula cursus risus id luctus. Curabitur accumsan venenatis nibh, non egestas ipsum vulputate ac. Vivamus consectetur dolor sit amet enim aliquet eu scelerisque ipsum hendrerit. Donec lobortis suscipit vestibulum.
                    p Nullam luctus pellentesque risus in ullamcorper. Nam neque nunc, mattis vitae ornare ut, feugiat a erat. Ut tempus iaculis augue vel pellentesque.
        section 
            id Images
            class clearfix
            h3 Images
            . Float-Right
                strong HTML:
                pre &lt;img src="http://placekitten.com/g/500/200" class="Absolute-Center is-Image" alt="" /&gt;
                strong CSS:
                pre 
                    ++ .Absolute-Center.is-Image {
                    ++ height: auto;
                    ++ }
                    ++ .Absolute-Center.is-Image img {
                    ++ width: 100%;
                    ++ height: auto;
                    ++ }
            p Images work too! Apply the class/style to the image itself and set
                code height: auto;
                + like you would with a responsively-sized image to let it resize with the container.
            p Note that
                code height: auto;
                + works for images, but causes a regular content block to stretch to fill the container unless you use the
                a variable height technique
                    href #Height
                + . It's likely that because browsers have to calculate the height for the image rendered image, so
                code margin: auto;
                + ends up working as if you'd declared the height in all tested browsers.
            . Center-Container
                img 
                    src http://placekitten.com/g/500/200
                    class Center-Block Absolute-Center is-Image
                    alt Center Cat
        section 
            id Height
            class clearfix
            h3 Variable Height
            . Float-Right
                strong Javascript:
                pre 
                    ++ /* Modernizr Test for Variable Height Content */
                    ++ Modernizr.testStyles('#modernizr { display: table; height: 50px; width: 50px; margin: auto; position: absolute; top: 0; left: 0; bottom: 0; right: 0; }', function(elem, rule) {
                    ++ Modernizr.addTest('absolutecentercontent', Math.round(window.innerHeight / 2 - 25) === elem.offsetTop);
                    ++ });
                strong CSS:
                pre 
                    ++ .absolutecentercontent .Absolute-Center.is-Variable {
                    ++ display: table;
                    ++ height: auto;
                    ++ }
            p Absolute Centering does require a declared height, however the height can be percentage based and controlled by
                code max-height
                + . This makes it ideal for responsive scenarios, just make sure you set an appropriate
                a overflow
                    href #Overflow
                + .
            p One way around the declared height is adding
                code display: table
                + , centering the content block regardless of content length. This causes issues in a few browsers (IE and Firefox, mainly), so my buddy
                a Kalley
                    href http://stackoverflow.com/users/2539605/kalley
                    target _blank
                + at
                a ELL Creative
                    href http://ellcreative.com
                    target _blank
                + wrote a Modernizr test to check if the browser supports this method of centering. Now you can progressively enhance
            . Caveats
                h4 Caveats:
                + This will break cross-browser compatibility. You may want to consider an
                a alternate technique
                    href #Other
                ++ if the Modernizr test doesn't meet your needs.
                ul 
                    li Not compatible with the
                        a Resizing
                            href #Resizing
                        ++ technique.
                        li 
                            strong Firefox/IE8:
                            + Using
                            code display: table
                            + aligns the content block to the top, but is still centered horizontally.
                        li 
                            strong IE9/10:
                            + Using
                            code display: table
                            + aligns the content block to the top left.
                        li 
                            strong Mobile Safari:
                            + The content block is centered vertically, but becomes slightly off-center horizontally when using percentage based widths.
                . Center-Container
                    . Center-Block Absolute-Center is-Variable
                        h4 Absolute Center,
                            class Title
                            br 
                            + Variable Height.
                        p This box is absolutely centered vertically within its container, regardless of content height.
            section 
                id Other
                class clearfix
                h3 Other Techniques
                p 
                    em Absolute Centering
                    + is a great solution for centering, but there are other methods that may fit more specific needs. The most commonly used or recommended methods are
                    a Negative Margins
                        href #Negative-Margins
                    + ,
                    a Transforms
                        href #Transforms
                    + ,
                    a Table-Cell
                        href #Table-Cell
                    + ,
                    a Inline-Block
                        href #Inline-Block
                    + , and now
                    a Flexbox
                        href #Flexbox
                    + . They are covered more in depth in other articles, so I'll only cover the basics here.
                . Technique Sub-Section clearfix
                    id Negative-Margins
                    h3 Negative Margins
                    . Float-Right
                        pre 
                            ++ .is-Negative {
                            ++ width: 300px;
                            ++ height: 200px;
                            ++ padding: 20px;
                            ++ position: absolute;
                            ++ top: 50%; left: 50%;
                            ++ margin-left: -170px; /* (width + padding)/2 */
                            ++ margin-top: -120px; /* (height + padding)/2 */
                            ++ }
                    p Perhaps the most common technique. If exact dimensions are known, setting a negative margin equal to half the width/height (plus padding, if not using
                        code box-sizing: border-box
                        + ) along with
                        code top: 50%; left: 50%;
                        + will center the block within a container.
                    p It should be noted that this is the only method tested that worked as expected in IE6-7.
                    . Advantages
                        h4 Advantages:
                        ul 
                            li Works well cross-browser, including IE6-7
                            li Requires minimal code
                    . Caveats
                        h4 Caveats:
                        ul 
                            li Not responsive. Doesn't work for percentage based dimensions and can't set min-/max-
                            li Content can overflow the container
                            li Have to compensate for
                                code padding
                                + or use
                                code box-sizing: border-box
                    . Center-Container Clear
                        . Center-Block is-Negative
                            h4 Absolute Center,
                                class Title
                                br 
                                + Negative Margins.
                            p This box is absolutely centered vertically within its container using negative margins.
                . Technique Sub-Section clearfix
                    id Transforms
                    h3 Transforms
                    . Float-Right
                        pre 
                            ++ .is-Transformed {
                            ++ width: 50%;
                            ++ margin: auto;
                            ++ position: absolute;
                            ++ top: 50%; left: 50%;
                            ++ -webkit-transform: translate(-50%,-50%);
                            ++ -ms-transform: translate(-50%,-50%);
                            ++ transform: translate(-50%,-50%);
                            ++ }
                    p One of the simplest techniques with about the same benefits as Absolute Centering, but supports variable height. Give the content block
                        code transform: translate(-50%,-50%)
                        + with the required vendor prefixes along with
                        code top: 50%; left: 50%;
                        + to get it centered.
                    . Advantages
                        h4 Advantages:
                        ul 
                            li Variable height content
                            li Requires minimal code
                    . Caveats
                        h4 Caveats:
                        ul 
                            li Won't work in IE8
                            li Need vendor prefixes
                            li Can interfere with other
                                code transform
                                + effects
                            li Results in blurry rendering of edges and text in some cases. Not as much of an issue in modern rendering engines, especially if you
                                a enable
                                    href http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/
                                    code transform-style: preserve-3d
                    p 
                        strong Futher Resources
                    p Read more about Transform Centering in Chris Coyier’s article
                        a “Centering Percentage Width/Height Elements”
                            href https://css-tricks.com/centering-percentage-widthheight-elements/
                        + on
                        em CSS-Tricks
                        + .
                    . Center-Container Clear
                        . Center-Block is-Translated
                            h4 Absolute Center,
                                class Title
                                br 
                                + Translate(-50%,-50%).
                            p This box is absolutely centered vertically within its container using
                                code translate(-50%,-50%)
                                + .
                . Technique Sub-Section clearfix
                    id Table-Cell
                    h3 Table-Cell
                    . Float-Right
                        strong HTML:
                        pre 
                            ++ &lt;div class="Center-Container is-Table"&gt;
                            ++ &lt;div class="Table-Cell"&gt;
                            ++ &lt;div class="Center-Block"&gt;
                            ++ &lt;!-- CONTENT --&gt;
                            ++ &lt;/div&gt;
                            ++ &lt;/div&gt;
                            ++ &lt;/div&gt;
                        strong CSS:
                        pre 
                            ++ .Center-Container.is-Table { display: table; }
                            ++ .is-Table .Table-Cell {
                            ++ display: table-cell;
                            ++ vertical-align: middle;
                            ++ }
                            ++ .is-Table .Center-Block {
                            ++ width: 50%;
                            ++ margin: 0 auto;
                            ++ }
                    p This may be the best technique overall, simply because the height can vary with the content and browser support is great. The main disadvantage is the extra markup, requiring a total of three elements to get the final one centered.
                    . Advantages
                        h4 Advantages:
                        ul 
                            li Variable height content
                            li Content overflows by stretching the parent element
                            li Works well cross-browser
                    . Caveats
                        h4 Caveats:
                        ul 
                            li Requires extra markup
                    p 
                        strong Futher Resources
                    p Read more about Table-Cell Centering in Roger Johansson’s article
                        a “Flexible height vertical centering with CSS, beyond IE7″
                            href http://www.456bereastreet.com/archive/201103/flexible_height_vertical_centering_with_css_beyond_ie7/
                        + on
                        em 456bereastreet
                        + .
                    . Center-Container is-Table Clear
                        . Table-Cell
                            . Center-Block
                                h4 Absolute Center,
                                    class Title
                                    br 
                                    + Table/Table-Cell.
                                p This box is absolutely centered vertically within its
                                    code display: table-cell
                                    + parent, which is within a
                                    code display: table
                                    + container.
                . Technique Sub-Section clearfix
                    id Inline-Block
                    h3 Inline-Block
                    . Float-Right
                        strong HTML:
                        pre 
                            ++ &lt;div class="Center-Container is-Inline"&gt;
                            ++ &lt;div class="Center-Block"&gt;
                            ++ &lt;!-- CONTENT --&gt;
                            ++ &lt;/div&gt;
                            ++ &lt;/div&gt;
                        strong CSS:
                        pre 
                            ++ .Center-Container.is-Inline {
                            ++ text-align: center;
                            ++ overflow: auto;
                            ++ }
                            ++ .Center-Container.is-Inline:after,
                            ++ .is-Inline .Center-Block {
                            ++ display: inline-block;
                            ++ vertical-align: middle;
                            ++ }
                            ++ .Center-Container.is-Inline:after {
                            ++ content: '';
                            ++ height: 100%;
                            ++ margin-left: -0.25em; /* To offset spacing. May vary by font */
                            ++ }
                            ++ .is-Inline .Center-Block {
                            ++ max-width: 99%; /* Prevents issues with long content causes the content block to be pushed to the top */
                            ++ /* max-width: calc(100% - 0.25em) /* Only for IE9+ */
                            ++ }
                    p By popular demand: Inline-Block centering. The basic idea is using
                        code display: inline-block
                        + ,
                        code vertical-align: middle
                        + and a psuedo element to center your content block inside of a container. The concept here is best explained in this CSS-Tricks article,
                        a Centering in the Unknown
                            href https://css-tricks.com/centering-in-the-unknown/
                            target _blank
                        + . My implementation has a few new tricks here that I haven't seen elsewhere that help solve a few issues.
                    p The content block's width must be declared to be no wider than 100% of the container minus 0.25em if the content is wider than the container. like a block with long paragraph text. Otherwise, the content block will be pushed to the top, which is the reason for using
                        code :after
                        + . Using
                        code :before
                        + caused the content to be pushed down 100%!
                    p If your content block needs take up as much available horizontal space as possible, you can add either
                        code max-width: 99%;
                        + , which works for bigger containers, or
                        code max-width: calc(100% - 0.25em)
                        + depending on the browsers you support and the width of the container.
                    p The benefits are mostly the same as the
                        a Table-Cell
                            href #Table-Cell
                        + technique, but I initially left this method out because it's very much a hack. Regardless, browser support is great and it proves to be a popular technique.
                    . Advantages
                        h4 Advantages:
                        ul 
                            li Variable height content
                            li Content overflows by stretching the parent element
                            li Works well cross-browser, and can be adapted for IE7 support (view
                                a the CSS
                                    href https://codepen.io/shshaw/pen/gEiDt
                                + to see)
                    . Caveats
                        h4 Caveats:
                        ul 
                            li Requires a container
                            li Relies on
                                code margin-left: -0.25em;
                                + to horizontally center correctly, but may need to be adjusted for different fonts/sizes
                            li Content block's width must be declared to be no wider than 100% of the container minus 0.25em.
                    p 
                        strong Futher Resources
                    p Read more about Transform Centering in Chris Coyier’s article
                        a "Centering In The Unknown”
                            href https://css-tricks.com/centering-in-the-unknown/
                        + on
                        em CSS-Tricks
                        + .
                    . Center-Container is-Inline Clear
                        . Center-Block
                            h4 Absolute Center,
                                class Title
                                br 
                                + Inline-Block.
                            p This box is absolutely centered vertically using
                                code display: inline-block
                                + ,
                                code vertical-align: middle
                                + and a psuedo element.
                . Technique Sub-Section clearfix
                    id Flexbox
                    h3 Flexbox
                    . Float-Right
                        pre 
                            ++ .Center-Container.is-Flexbox {
                            ++ display: -webkit-box;
                            ++ display: -moz-box;
                            ++ display: -ms-flexbox;
                            ++ display: -webkit-flex;
                            ++ display: flex;
                            ++ -webkit-box-align: center;
                            ++ -moz-box-align: center;
                            ++ -ms-flex-align: center;
                            ++ -webkit-align-items: center;
                            ++ align-items: center;
                            ++ -webkit-box-pack: center;
                            ++ -moz-box-pack: center;
                            ++ -ms-flex-pack: center;
                            ++ -webkit-justify-content: center;
                            ++ justify-content: center;
                            ++ }
                    p The future of layout in CSS, Flexbox is the latest CSS spec designed to solve common layout problems such as vertical centering. Smashing Magazine already has a great article on
                        a Centering Elements with Flexbox
                            href http://coding.smashingmagazine.com/2013/05/22/centering-elements-with-flexbox/
                            target _blank
                        + that you should read to for a more complete overview. Keep in mind that Flexbox is more than just a way to center, it can be used for columns and all sorts of crazy layout problems.
                    . Advantages
                        h4 Advantages:
                        ul 
                            li Content can be any width or height, even overflows gracefully
                            li Can be used for more advanced layout techniques.
                    . Caveats
                        h4 Caveats:
                        ul 
                            li No IE8-9 support
                            li Requires a container or styles on the body
                            li Requires
                                a many vendor prefixes with different syntaxes
                                    href https://css-tricks.com/using-flexbox/
                                + to work on modern browsers
                            li Possible
                                a performance issues
                                    href https://css-tricks.com/does-flexbox-have-a-performance-problem/
                    p 
                        strong Futher Resources
                    p Read more about Flexbox Centering in David Storey’s article
                        a “Designing CSS Layouts With Flexbox Is As Easy As Pie”
                            href http://coding.smashingmagazine.com/2013/05/22/centering-elements-with-flexbox/
                        + on
                        em Smashing Magazine
                        + .
                    . Center-Container is-Flexbox Clear
                        . Center-Block
                            h4 Absolute Center,
                                class Title
                                br 
                                + Flexbox.
                            p This Flexbox box is absolutely centered vertically within its container.
            section 
                id Recommendations
                class clearfix
                h3 Recommendations
                p Each technique has their advantages. Which one you choose mainly boils down to which browsers you support and what your existing markup looks like, but use the
                    a comparison table
                        href https://codepen.io/shshaw/full/gEiDt#Comparison-Table
                    + to make the right choice to match the features you need.
                p 
                    em Absolute Centering
                    + works great as a simple drop-in solution with no-fuss. Anywhere you used Negative Margins before, use Absolute Centering instead. You won't have to deal with pesky math for the margins or extra markup, and you can size your boxes responsively.
                p If your site requires variable height content with the best browser compatibility, try out the
                    a Table-Cell
                        href #Table-Cell
                    + ,
                    a Inline-Block
                        href #Inline-Block
                    + techniques. If you're on the bleeding edge, give
                    a Flexbox
                        href #Flexbox
                    + a try and reap the benefits of its advanced layout techniques.


        $append body-scripts
            script
                _ Modernizr.testStyles
                    @ '#modernizr { display: table; height: 50px; width: 50px; margin: auto; position: absolute; top: 0; left: 0; bottom: 0; right: 0; }'
                    function 
                        param elem
                        param rule
                        _ Modernizr.addTest('absolutecentercontent', Math.round(window.innerHeight / 2 - 25) === elem.offsetTop)
                    # Trigger Resize
                _ $(".trigger-Resize").on
                    @ "click"
                    function 
                        param e
                        set $resizeBlock = $(this).parents(".Center-Block")
                        if !$resizeBlock.hasClass("is-Small")
                            _ $resizeBlock.animate
                                { 
                                    @ "width" "300px"
                                    @ "height" "260px"
                                @ 800
                                ._ addClass
                                    @ "is-Small"
                        else
                            _ $resizeBlock.animate
                                { 
                                    @ "width" "500px"
                                    @ "height" "350px"
                                @ 800
                                ._ removeClass
                                    @ "is-Small"
                        _ e.preventDefault()
                        _ e.stopPropagation()
                        return false
                    # Trigger Resize
                    # Simple show/hide modal
                _ $(".toggle-Modal").on
                    @ "click"
                    function 
                        param e
                        _ $(".Modal-Background").toggleClass("is-Hidden")
                        _ e.preventDefault()
                        _ e.stopPropagation()
                        return false
                    # Simple show/hide modal
                    # Don't show modal on load in mobile webkit because of the document centering issue.
                sequence 
                    set ua = navigator.userAgent
                    set isMobileWebkit = /WebKit/.test(ua) && /Mobile/.test(ua)
                    # Don't show modal on load in mobile webkit because of the document centering issue.
                if isMobileWebkit
                    _ $(".Modal, .Modal-Background").addClass("is-Hidden")
                var 
                    decl lastId
                    decl topMenu = $("#Navigation")
                    decl topMenuHeight = topMenu.outerHeight() + 0
                    decl menuItems = topMenu.find("a")
                    decl scrollItems
                        _ menuItems.map
                            function 
                                var item = $($(this).attr("href"))
                                if item.length
                                    return item
                    # Unneccessary Scroll Functionality :-)
                function highlightNav
                    var fromTop = $(window).scrollTop() + topMenuHeight
                    var cur
                        _ scrollItems.map
                            function 
                                if $(this).offset().top < fromTop
                                    return this
                    set cur = cur[cur.length - 1]
                    var id
                        iif cur && cur.length
                            then cur[0].id
                            else ""
                        # console.log("id",id);
                    if lastId !== id
                        set lastId = id
                            # Set/remove active class
                        _ menuItems.removeClass("is-Current").filter("[href=#" + id + "]").addClass("is-Current")
                            # Set/remove active class
                _ highlightNav()
                _ $(window).scroll(highlightNav)
                var $links = $('[href^=#]')
                var $page = $('.browser iframe.page')
                var $input = $('.browser .address-bar input')
                _ $links.on
                    @ 'click'
                    function 
                        param e
                        var $target = $(e.target)
                        var hash = $target.attr('href')
                        var src = window.location.href
                        set src = src.split('#')[0]
                        set window.location.href = src + "#" + hash
                        _ e.preventDefault()
                    # jquery.arbitrary-anchor.js | briangonzalez.org/arbitrary-anchor
                iife 
                    param e
                    param t
                    function a
                        var n = e.location.hash.substring(1).split("|")
                        var r = n[0]
                        var i = n[1] || 600
                        if r.charAt(0).search(/[A-Za-z]/) > -1
                            var s = t("#" + r)
                        var u = t('a[name="' + r + '"]')
                        if u && u.length > 0 || s && s.length > 0
                            return 
                        var a = t(r).first()
                        if a && a.length > 0
                            var f = a
                        else
                            return 
                        if f && f.length > 0
                            var l = f.offset().top
                            _ o.stop(true, false).animate
                                { 
                                    @ scrollTop l
                                _ parseInt(i)
                    var 
                        decl n
                        decl r
                        decl i
                        decl s
                        decl o
                    var u = 750
                    _ t(document).ready
                        function 
                            set n = t(e)
                            set r = t(this)
                            set i = r.find("body")
                            set s = r.find("html")
                            set o = i.add(s)
                            _ a()
                            _ n.on("hashchange", a)
                            _ n.on
                                @ "mousewheel DOMMouseScroll touchstart mousedown MSPointerDown"
                                function 
                                    param e
                                    _ o.stop(true, false)
                    (
                        @ window
                        @ jQuery
                    # jquery.arbitrary-anchor.js | briangonzalez.org/arbitrary-anchor
