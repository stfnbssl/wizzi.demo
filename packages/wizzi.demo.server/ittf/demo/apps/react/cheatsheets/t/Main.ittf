$group

    
    $include main/functions
    $include main/styled
    
    react Main

        ctor
            set this.store = new LocalStorage('wizziCS')
            set this.storeSheets = new LocalStorage('wizziCSSheets')
            set this.state
                {
                    @ mainView 'view-cs-editor'
                    @ sheetName null
                    @ schema null
                    @ description null
                    @ itemListEdit null
                    @ itemList null
                    @ storedSheetsNames []
                    @ createNewSheetOpen false
                    @ newSheetName ''
                    @ newSheetSchema ''
                    @ newSheetDescription ''
                    @ newSheetIttfMainContent ''
                    @ currentModalEdit ''

        did-mount
            let recentView = this.store.get('recentView')
            let recentSheet
            if !recentView
                set recentView = 'view-cs-editor'
                _ this.store.set('recentView', recentView)
                _ this.setState
                    {
                        @ mainView recentView
                    =>
                        _ this.createNewSheet
            else
                const recentSheet = this.store.get('recentSheet')
                _ this.setState
                    {
                        @ mainView recentView
                        @ sheetName recentSheet
                    =>
                        log 'did.mount', recentView, recentSheet
                        _ this.setSheet
                            @ recentSheet

            set this.executeSaveSheetDebounced
                _ wz.debounce
                    =>
                        _ this.saveSheet
                    @ 1000

        => handleMainViewChange                    
            param ev
            log 'handleMainViewChange', ev.target.id
            _ this.setState
                {
                    @ mainView ev.target.id

        => handleValuesChange
            param values
            $$ _ this.executeValuesChangeDebounced
            $$     @ newStateValues.cssRule    

        $include main/methods
        $include main/handlers
        
        render

            if (this.state.mainIttfContent == null)
                return
                    h1
                        + ...loading...

            const curSheetName = this.state.sheetName
            const storedSheetsNames = this.state.storedSheetsNames 
            const handleChangeSheet = this.handleChangeSheet

            log 'Main.render.this.state', this.state

            function SheetSelector
                return
                    < FlexColumn
                        @ width '20%'
                        fieldset
                            < SelectorLabel
                                @ size 'h1'
                                + Sheet
                            < SelectorSelectValue
                                @ onChange {handleChangeSheet}
                                @ value {curSheetName}
                                {
                                    _ storedSheetsNames.map
                                        =>
                                            param sheetName
                                            param ndx 
                                            option
                                                @ key {ndx}
                                                @ value {sheetName}
                                                + {sheetName}

            return
                < React.Fragment
                    < SheetRoot
                        < SheetTitleBar
                            {
                                &&
                                    + this.state.mainView == 'view-cs-editor'
                                    < React.Fragment
                                        < SheetSelector
                                        < FlexRow
                                            < FlexColumn
                                                < Button
                                                    @ size 'h1'
                                                    @ onClick {this.handleAddSheetRequest}
                                                    + Add
                                            < FlexColumn
                                                < Button
                                                    @ size 'h1'
                                                    @ id 'item-list'
                                                    @ onClick {this.handleEditRequest}
                                                    + Items list
                                        < FlexRow
                                            < FlexColumn
                                                < Button
                                                    @ size 'h1'
                                                    @ id 'view-cs-shows'
                                                    @ onClick {this.handleMainViewChange}
                                                    + Show
                                            < FlexColumn
                                                < Button
                                                    @ size 'h1'
                                                    @ id 'view-docs'
                                                    @ onClick {this.handleMainViewChange}
                                                    + Docs
                            {
                                &&
                                    + this.state.mainView == 'view-cs-browser'
                                    < FlexRow
                                        < FlexColumn
                                            < Button
                                                @ size 'h1'
                                                @ id 'view-cs-edit'
                                                @ onClick {this.handleMainViewChange}
                                                + Edit

                        < SheetBody
                            {
                                &&
                                    + this.state.mainView == 'view-cs-editor'
                                    < React.Fragment
                                        < Editor
                                            @ schema {this.state.schema}
                                            @ itemList {this.state.itemList}
                                            @ selectedEditPackiPath {this.state.selectedEditPackiPath}
                                            @ selectedMainIttfContentPath {this.getSelectedMainIttfContentPath()}
                                            @ packiFiles {this.state.packiFiles}
                                            @ onChange {this.handleItffContentChange}
                                            @ onSelectFileItem {this.handleSelectFileItem}
                            {
                                &&
                                    + this.state.mainView == 'view-cs-browser'
                                    < React.Fragment
                                        < Browser
                                            @ content {this.state.currentSheet}
                            {
                                &&
                                    + this.state.mainView == 'view-docs'
                                    < React.Fragment
                                        < Docs

                        $include main/modals  