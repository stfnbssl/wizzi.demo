module
    kind react
    var jsonCode
        [ 
            @ '{'
            @ '    "p1": "v3",'
            @ '    "p2": false'
            @ "}"
            ._ join
                @ '\n'
        # Configures two JSON schemas, with references.
    var modelUri = monaco.Uri.parse("a://b/foo.json")
        # a made up unique URI for our model
    var model = monaco.editor.createModel(jsonCode, "json", modelUri)
        # a made up unique URI for our model
        # configure the JSON language support with schemas and schema associations
    _ monaco.languages.json.jsonDefaults.setDiagnosticsOptions
        { 
            @ validate true
            [ schemas
                { 
                    @ uri "http://myserver/foo-schema.json"
                    [ fileMatch
                        @ modelUri.toString()
                        # id of the first schema
                    { schema
                        @ type "object"
                        { properties
                            { p1
                                [ enum
                                    @ "v1"
                                    @ "v2"
                            { p2
                                @ $ref "http://myserver/bar-schema.json"
                                    # reference the second schema
                        # associate with our model
                { 
                    @ uri "http://myserver/bar-schema.json"
                    { schema
                        @ type "object"
                        { properties
                            { q1
                                [ enum
                                    @ "x1"
                                    @ "x2"
                        # id of the second schema
        # configure the JSON language support with schemas and schema associations
    _ monaco.editor.create
        _ document.getElementById("container")
        { 
            @ model
